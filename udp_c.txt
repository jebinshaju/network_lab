~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Name     : Jebin Shaju
Class    : CSE B
Semester : S6
Roll No  : 33
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		UDP - CLIENT SERVER COMMUNICATION
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.............
udp_server.c
.............


#include<stdio.h>
#include<string.h>
#include<sys/socket.h>
#include<stdlib.h>
#include<netdb.h>

int main(int argc,char* argv[])
{
	struct sockaddr_in server;
	if (argc != 2)
	{
		printf("Input format not correct.");
	}
	
	int sockfd = socket(AF_INET,SOCK_DGRAM,0);
	if(sockfd == -1)
	{
		printf("Error in socket creation.");
	}
	
	server.sin_family = AF_INET;
	server.sin_addr.s_addr = INADDR_ANY;
	server.sin_port = htons(atoi(argv[1]));
	
	if(bind(sockfd,(struct sockaddr*)&server,sizeof(server))<0)
	{
		printf("Error in binding.");
	}
	
	char buffer[100];
	printf("Server waiting.\n");
	
	int i=sizeof(server);
	int k=(recvfrom(sockfd,buffer,100,0,(struct sockaddr*)&server,&i));
  	if(k<0)
    		printf("error in receiving\n");
	printf("Got a datagram: %s",buffer);
	return 0;
}


.............
udp_client.c
.............

#include<sys/socket.h>
#include<netdb.h>
#include<stdlib.h>
#include<stdio.h>
#include<string.h>

int main(int argc,char* argv[])
{
	struct sockaddr_in client;
	if (argc != 3)
	{
		printf("Input format not connect");
	}
	int sockfd = socket(AF_INET,SOCK_DGRAM,0);
	if (sockfd ==-1)
	{
		printf("Error in socket creation");
	}
	
	client.sin_family = AF_INET;
	client.sin_addr.s_addr = INADDR_ANY;
	client.sin_port = htons(atoi(argv[2]));
	
	char buffer[100];
	printf("Enter message to be send to server: ");
	fgets(buffer,100,stdin);
	
	if(sendto(sockfd,buffer,sizeof(buffer),0,(struct sockaddr*)&client,sizeof(client)),0)
	{
		printf("Error in sending");
	}
	return 0;
}
}


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				 OUTPUT
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client-side
```````````
user@user:~/$ gcc udpclient.c -o client
user@user:~/$ ./client localhost 8080
Enter message to be send to server: hii this is from client 




server-side
```````````
user@user:~/$ gcc udpserver.c -o server
user@user:~/$ ./server 8080
Server waiting.
Got a datagram: hii this is from client



